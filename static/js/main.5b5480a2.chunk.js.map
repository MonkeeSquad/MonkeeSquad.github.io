{"version":3,"sources":["components/menu.jsx","components/Header.jsx","components/SignIn.jsx","firebase.js","components/Scanner.jsx","components/Item.jsx","components/timeConverter.jsx","components/TicketDetail.jsx","components/Tickets.jsx","components/Logout.jsx","components/Main.jsx","components/Footer.jsx","components/DesktopWarning.jsx","components/deviceDetect.jsx","App.jsx","components/HandleClick.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["NavigationMenu","setDisplayed","useContext","MenuContext","React","useState","anchorEl","setAnchorEl","handleClick","btn","className","onClick","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","Header","props","src","alt","width","height","SignIn","email","setEmail","password","setPassword","useSignInWithEmailAndPassword","firebase","auth","signInWithEmailAndPassword","loading","error","message","type","placeholder","value","onChange","e","target","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","ticketsRef","firestore","collection","Scanner","delay","setDelay","result","setResult","scanInfo","SetScanInfo","Client","setClient","ticketUpdate","setTicketUpdate","counter","setCounter","updateTicket","ticketRef","a","update","isValid","validatedAt","Date","now","then","catch","console","handleDocumentFound","ticket","handleScan","scannedValue","log","timestamp","doc","get","exists","data","getTicket","onError","err","onScan","Button","variant","style","borderRadius","boxShadow","clientName","Item","setIsComponentVisible","qrcode","length","timeConverter","mili","year","getFullYear","month","getMonth","getDate","getHours","getMinutes","getSeconds","TicketDetail","isComponentVisible","margin","AllTickets","tickets","windowref","search","Setsearch","TicketType","SetTicketType","name","checked","filter","toLowerCase","includes","map","index","ref","Logout","signOut","Main","displayed","useAuthState","user","Footer","DesktopWarning","Desktop","children","useMediaQuery","minWidth","Mobile","maxWidth","createContext","App","setTickets","initialIsVisible","useRef","handleClickOutside","current","contains","useEffect","document","addEventListener","removeEventListener","useComponentVisible","db","docs","fetchData","Container","disableGutters","Provider","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5b5480a2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { MenuContext } from '../App';\r\nimport { useContext } from 'react'\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\nconst NavigationMenu = () => {\r\n\r\n  const { setDisplayed } = useContext(MenuContext);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClickListItem = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClick = (btn) => {\r\n    setDisplayed(btn)\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  return (\r\n    <div className=\"NavMenu\">\r\n      <button className=\"NavMenuBtn\" onClick={handleClickListItem}>\r\n        <p className=\"hamburger\">|||</p>\r\n      </button>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={() => handleClick(\"Skaner\")}>Skaner</MenuItem>\r\n        <MenuItem onClick={() => handleClick(\"Tickets\")}>Bilety</MenuItem>\r\n        <MenuItem onClick={() => handleClick(\"Promocje\")}>Promocje</MenuItem>\r\n        <MenuItem onClick={() => handleClick(\"Offline\")}>Offline Mode</MenuItem>\r\n        <MenuItem onClick={() => handleClick(\"Admin\")}>Admin</MenuItem>\r\n        <MenuItem onClick={() => handleClick(\"Logout\")}>Logout</MenuItem>\r\n\r\n      </Menu>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavigationMenu;","import React from 'react';\r\nimport NavigationMenu from './menu'\r\nconst Header = (props) => {\r\n  return (\r\n    <div className=\"header\">\r\n      <img src={\"/logo-black-2.png\"} alt=\"logo\" width=\"80\" height=\"30\" />\r\n      <NavigationMenu />\r\n    </div>);\r\n}\r\n\r\nexport default Header;","import { useSignInWithEmailAndPassword } from 'react-firebase-hooks/auth';\r\nimport React, { useState } from 'react'\r\nimport firebase from 'firebase'\r\n\r\nconst SignIn = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [\r\n    signInWithEmailAndPassword,\r\n    user,\r\n    loading,\r\n    error,\r\n  ] = useSignInWithEmailAndPassword(firebase.auth());\r\n\r\n\r\n  return (\r\n    <div className=\"SignIn\">\r\n      <div className=\"SignIn_section_one\">\r\n        <p>Welcome To QR Reader!</p>\r\n        <p>Time 2 Party</p>\r\n        {/* wyswietlanie wczytywania oraz wyswietlanie bledow jesli sa */}\r\n        {loading ? <p>Loading...</p> : error ? <p>{error.message}</p> : null}\r\n      </div>\r\n      <div className=\"SignIn_section_two\">\r\n        <p className=\"SignIn_please_sign_in\">Please Sign in</p>\r\n        <input\r\n          className=\"SignIn_login\"\r\n          type=\"email\"\r\n          placeholder=\"login\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <input\r\n          className=\"SignIn_password\"\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button\r\n          className=\"SignIn_button\"\r\n          onClick={() => signInWithEmailAndPassword(email, password)}>\r\n          Let's Start!\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn","import firebase from 'firebase/app';\r\n// import firebaseConfig from '../firebaseConfig';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDA2P7mrlQqsxniuob9LRJm1UmVEC5stj4\",\r\n  authDomain: \"t2p-qr-reader.firebaseapp.com\",\r\n  projectId: \"t2p-qr-reader\",\r\n  storageBucket: \"t2p-qr-reader.appspot.com\",\r\n  messagingSenderId: \"402343303548\",\r\n  appId: \"1:402343303548:web:59ce8958467737f6206cf9\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\nexport default firebase;\r\n","import React, { useState } from 'react';\r\nimport QrReader from 'react-qr-reader'\r\nimport Button from '@material-ui/core/Button';\r\nimport firebase from \"../firebase\";\r\nimport SwapHorizontalCircleIcon from '@material-ui/icons/SwapHorizontalCircle';\r\n\r\nconst db = firebase.firestore()\r\nconst ticketsRef = db.collection('tickets')\r\n\r\nfunction Scanner() {\r\n  const [delay, setDelay] = useState(false)\r\n  const [result, setResult] = useState(null)\r\n  const [scanInfo, SetScanInfo] = useState([false, \"\"])\r\n  const [Client, setClient] = useState(\"data\")\r\n  const [ticketUpdate, setTicketUpdate] = useState(\"\")\r\n  let [counter, setCounter] = useState(0)\r\n  const updateTicket = async (ticketRef) => {\r\n    return ticketRef.update({\r\n      isValid: false,\r\n      validatedAt: Date.now()\r\n    })\r\n      .then(() => {\r\n        setTicketUpdate(\"Bilet pomyślnie skasowany\")\r\n      })\r\n      .catch((error) => {\r\n        // The document probably doesn't exist.\r\n        console.error(\"Error updating document: \", error);\r\n        setTicketUpdate(\"error: \" + error)\r\n      });\r\n  }\r\n\r\n  const handleDocumentFound = (ticket, ticketRef) => {\r\n    const {\r\n      isValid,\r\n    } = ticket\r\n\r\n    if (isValid) {\r\n      updateTicket(ticketRef)\r\n      SetScanInfo([true, \"green\"])\r\n    } else {\r\n      setTicketUpdate(\"Bilet został juz skasowany\")\r\n      SetScanInfo([true, \"red\"])\r\n    }\r\n\r\n\r\n  }\r\n\r\n  const handleDocumentNotFound = (ticket, ticketRef) => {\r\n    setClient(\"error\")\r\n    setTicketUpdate(\"Bilet nie istnieje w systemie\")\r\n    SetScanInfo([true, \"red\"])\r\n  }\r\n\r\n\r\n  const handleScan = async (scannedValue) => {\r\n\r\n    console.log('Scanned!: ', scannedValue)\r\n    if (scannedValue && delay) {\r\n      const timestamp = Date.now()\r\n      // call api with (timestamp and text)\r\n      console.log('timestamp', timestamp)\r\n      setResult(scannedValue)\r\n      setDelay(false)\r\n\r\n      const getTicket = async () => {\r\n        const ticketRef = await ticketsRef.doc(scannedValue)\r\n        ticketRef.get().then((doc) => {\r\n          if (doc.exists) {\r\n            console.log(\"Document data:\", doc.data());\r\n            setClient(doc.data());\r\n            handleDocumentFound(doc.data(), ticketRef)\r\n          } else {\r\n            // doc.data() will be undefined in this case\r\n            console.log(\"No such document!\");\r\n            handleDocumentNotFound(doc.data(), ticketRef)\r\n          }\r\n        }).catch((error) => {\r\n          console.error(\"Error getting document:\", error);\r\n        });\r\n\r\n      }\r\n      getTicket()\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n  const handleError = (err) => {\r\n    console.error(err)\r\n  }\r\n\r\n\r\n\r\n  const makeScan = () => {\r\n    setDelay(250)\r\n  }\r\n\r\n  const exitScanInfo = () => {\r\n    setCounter(counter += 1)\r\n    SetScanInfo([false, \"\"])\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"skaner\">\r\n      <div className=\"skaner_qr_reader\">\r\n        <QrReader\r\n          delay={delay}\r\n          onError={handleError}\r\n          onScan={handleScan}\r\n        />\r\n\r\n      </div>\r\n      <div className=\"skaner_scan_info\">\r\n        <div className=\"skaner_scan_info_scan_window\">\r\n          <p>QrReader</p>\r\n          <p>Zeskanuj Kod by uzyskać więcej informacji</p>\r\n          <p> Zeskanowanych w tej sesji: {counter}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"skaner_scan_button\">\r\n        <Button variant=\"contained\" className=\"skaner_scan_button_btn\" style={{ borderRadius: '10px', boxShadow: '4px 4px 4px rgba(0, 0, 0, 0.5)' }} onClick={() => makeScan()}>\r\n          SCAN\r\n        </Button>\r\n      </div>\r\n      {/* =========okno skanu w absolute========== */}\r\n      {scanInfo[0] ?\r\n        < div className={`scan_info scan_info_${scanInfo[1]}`}>\r\n          < div className={`scan_info_box scan_info_box_${scanInfo[1]} scan_info_${scanInfo[1]}`}>\r\n            <p className=\"scan_info_box_name\">{Client.clientName}</p>\r\n            <p className=\"scan_info_box_code\"> KOD: {result}</p>\r\n            <p className=\"scan_info_box_quantity\">Ilość Biletów: 3</p>\r\n            <p className=\"scan_info_box_type\">Rodzaj biletu: VIP</p>\r\n            <p className=\"scan_info_box_status\">{ticketUpdate}</p>\r\n            <Button variant=\"contained\" className=\"skaner_scan_button_btn\" style={{ borderRadius: '10px', boxShadow: '4px 4px 4px rgba(0, 0, 0, 0.5)' }} onClick={() => exitScanInfo()}>\r\n              Ok\r\n            </Button>\r\n          </div >\r\n        </div >\r\n        : null\r\n      }\r\n    </div >\r\n\r\n  )\r\n\r\n}\r\n\r\nexport default Scanner","import React from 'react';\r\nimport { MenuContext } from '../App';\r\nimport { useContext } from 'react';\r\nconst Item = (props) => {\r\n  const { ticket } = props\r\n  const nameLock = 25;\r\n  const { setIsComponentVisible } = useContext(MenuContext);\r\n  return (\r\n    <div className=\"ItemConteiner\">\r\n\r\n      <div className=\"ItemCode\">\r\n        <button className=\"ItemCode_button\" onClick={() => setIsComponentVisible([true, ticket])}>Detail</button>\r\n\r\n        <p className=\"ItemCode_code\">KOD: {ticket.qrcode}</p>\r\n\r\n      </div>\r\n\r\n      <div className=\"ItemInfo\">\r\n        {/* zabezpieczenie przed robieniem z nazwy 2 linijkowego elementu,\r\n        jesli nazwisko jest dłuższe niz 25 znakow ( bo ktos podal debilie \r\n          email gdzie powinno byc nazwisko) to nie wyswietla sie napis \r\n          \"Name: \" przed imieniem co skutkuje skroceniem calego ciagu na tyle\r\n           by wszystko sie wpasowalo w jedna linie :) */}\r\n        {ticket.clientName.length <= nameLock ?\r\n          <p>Name: {ticket.clientName}</p>\r\n          :\r\n          <p>{ticket.clientName}</p>\r\n        }\r\n        <p>\r\n          {!ticket.isValid ?\r\n            \"Status: skasowany\"\r\n            :\r\n            \"Status: Nieskasowany\"}\r\n        </p>\r\n\r\n      </div>\r\n    </div>);\r\n}\r\n\r\nexport default Item;","export const timeConverter = (timestamp) => {  \r\n    const mili = new Date(timestamp);\r\n    const year = mili.getFullYear();\r\n    const month = mili.getMonth() < 10 ? '0' + (mili.getMonth() + 1) : (mili.getMonth() + 1);\r\n    const day = mili.getDate();\r\n    const hour = mili.getHours() < 10 ? '0' + mili.getHours() : mili.getHours();\r\n    const min = mili.getMinutes() < 10 ? '0' + mili.getMinutes() : mili.getMinutes();\r\n    const sec = mili.getSeconds() < 10? '0' + mili.getSeconds() : mili.getSeconds();\r\n    const time = day + '.' + month + '.' + year + ' - ' + hour + ':' + min + ':' + sec ;\r\n    return time;\r\n  }\r\n\r\n","import { MenuContext } from '../App';\r\nimport { useContext } from 'react'\r\nimport { timeConverter } from './timeConverter'\r\nimport Button from '@material-ui/core/Button'\r\n\r\n\r\nconst TicketDetail = (props) => {\r\n    const { isComponentVisible, setIsComponentVisible } = useContext(MenuContext);\r\n\r\n    const handleQuit = () => {\r\n        setIsComponentVisible([false, null])\r\n\r\n    }\r\n    return (\r\n        <div className=\"TicketDetail\">\r\n            <div className=\"TicketDetail_name\">\r\n                <div className=\"TicketDetail_name_box\">\r\n                    <p>imie: {isComponentVisible[1].clientName}</p>\r\n                    <p>Kod QR: {isComponentVisible[1].qrcode}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"TicketDetail_status\">\r\n                <div className=\"TicketDetail_status_box\">\r\n                    <div className=\"TicketDetail_status_box_col_1\">\r\n                        <p> STATUS: <br />{!isComponentVisible[1].isValid ? \"Skasowany\" : \"Nieskasowany\"}</p>\r\n                        <p>CZAS: <br />{!isComponentVisible[1].isValid ? timeConverter(isComponentVisible[1].validatedAt) : \"not known\"}</p>\r\n                    </div>\r\n                    <div className=\"TicketDetail_status_box_col_2\">\r\n                        <p>RODZAJ BILETU:  <br /> Vip</p>\r\n                        <p>DROGA ZAKUPU:  <br />Online</p>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"TicketDetail_promo\">\r\n                <div className=\"TicketDetail_promo_box\">\r\n                    <p>promocje/dodatki:<br />  2 Shoty <br /> Loża - 5os.</p>\r\n                    przemyslec wyglad i dodac opcje edycji biletow i wysylania na serw\r\n                </div>\r\n            </div>\r\n            <div className=\"TicketDetail_button\">\r\n                <Button variant=\"contained\"\r\n                    style={{ margin: '0.5vh 0', width: '20vw', height: \"5vh\", borderRadius: '10px' }}\r\n                    onClick={() => handleQuit()}>\r\n                    Close\r\n                </Button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default TicketDetail;","import React, { useState } from 'react';\r\nimport Item from './Item'\r\nimport { MenuContext } from '../App';\r\nimport { useContext } from 'react'\r\nimport TicketDetail from './TicketDetail';\r\n\r\nconst AllTickets = (props) => {\r\n  const { tickets, windowref, isComponentVisible } = useContext(MenuContext);\r\n  const [search, Setsearch] = useState();\r\n  const [TicketType, SetTicketType] = useState(\"All\")\r\n\r\n\r\n  const searched = (value) => {\r\n    if (search) {\r\n      if (value.clientName.toLowerCase().includes(search.toLowerCase())) {\r\n        return true\r\n      }\r\n    }\r\n    else { return true }\r\n  }\r\n\r\n  const isScaned = (value) => {\r\n    if (TicketType === \"Sold\") {\r\n      return !value.isValid;\r\n    }\r\n    else { return true }\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"AllTickets\">\r\n      <div className=\"searchbox\">\r\n        <div className=\"searchbox_search\">\r\n          <input className=\"searchbox_search_input\" type=\"search\" placeholder=\"search...\" onChange={e => Setsearch(e.target.value)} />\r\n        </div>\r\n        <div className=\"searchbox_selector\">\r\n          <div>\r\n            <label className=\"searchbox_selector_label\">Wszystkie Bilety\r\n              <input type=\"radio\" id=\"All\" name=\"Tickets_Type\" checked={TicketType === \"All\"} onChange={e => SetTicketType(e.target.id)} />\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label className=\"searchbox_selector_label\">Skasowane Bilety\r\n              <input type=\"radio\" id=\"Sold\" name=\"Tickets_Type\" onChange={e => SetTicketType(e.target.id)} />\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {tickets.filter(isScaned).filter(searched).map((value, index) => (\r\n        <Item key={index} index={index} ticket={value} />\r\n      ))}\r\n      {isComponentVisible[0] ?\r\n        <div className=\"popup\" ref={windowref}><TicketDetail /></div>\r\n        : null}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllTickets;","import React from 'react';\r\nimport firebase from 'firebase'\r\nimport { MenuContext } from '../App';\r\nimport { useContext } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nconst Logout = (props) => {\r\n\r\n    const { setDisplayed } = useContext(MenuContext);\r\n    const logout = () => {\r\n        firebase.auth().signOut();\r\n        setDisplayed(\"Tickets\")\r\n    };\r\n\r\n    return (\r\n        <div className=\"logout\">\r\n            <div className=\"logout_window\">\r\n                <p className=\"logout_window_text\">Are you sure want to sign out?</p>\r\n                <div className=\"logout_window_buttons\">\r\n                    <Button variant=\"contained\"\r\n                        style={{ margin: '0 6vw', width: '13vh', borderRadius: '10px' }}\r\n                        onClick={() => logout()}>\r\n                        Yes!\r\n                    </Button>\r\n                    <Button variant=\"contained\"\r\n                        style={{ margin: '0 6vw', width: '13vh', borderRadius: '10px' }}\r\n                        onClick={() => setDisplayed(\"Tickets\")}>\r\n                        No!\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>);\r\n}\r\n\r\nexport default Logout;","import React from 'react';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport firebase from 'firebase'\r\nimport { MenuContext } from '../App';\r\nimport { useContext } from 'react'\r\nimport SignIn from './SignIn'\r\nimport Scanner from './Scanner'\r\nimport AllTickets from './Tickets'\r\nimport Logout from './Logout'\r\n\r\n\r\n\r\nconst Main = (props) => {\r\n  const { displayed } = useContext(MenuContext);\r\n  const [user, loading, error] = useAuthState(firebase.auth());\r\n  if (user) {\r\n    switch (displayed) {\r\n      case \"Skaner\":\r\n        return (\r\n          <>\r\n            <div className=\"background\"></div>\r\n            <div className=\"main\">\r\n              <Scanner />\r\n            </div>\r\n          </>\r\n        );\r\n      case \"Tickets\":\r\n        return (\r\n          <>\r\n            <div className=\"background\"></div>\r\n            <div className=\"main\">\r\n              {/* {console.log(user)} */}\r\n              <AllTickets />\r\n            </div>\r\n          </>\r\n        );\r\n      case \"Logout\":\r\n        return (\r\n          <>\r\n            <div className=\"background\"></div>\r\n            <div className=\"main\">\r\n              <Logout />\r\n            </div>\r\n          </>\r\n        );\r\n      default:\r\n        return (\r\n          <>\r\n            <div className=\"background\"></div>\r\n            <div className=\"main\">\r\n              <p>problem with setting context.</p>\r\n              <p>This part of App is still under development or you dont have permission to view it</p>\r\n            </div>\r\n          </>\r\n        );\r\n    }\r\n  }\r\n  else if (loading) {\r\n    return (\r\n      <>\r\n        <div className=\"background\"></div>\r\n        <div className=\"main\">\r\n          <div className=\"SignIn\">\r\n            <div className=\"SignIn_section_one\">\r\n              <p>Welcome To QR Reader!</p>\r\n              <p>Time 2 Party</p>\r\n              <p>Initialising User...</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  else if (error) {\r\n    return (\r\n      <div className=\"main\">\r\n        <p>Error: {error}</p>\r\n      </div>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <>\r\n        <div className=\"background\"></div>\r\n        <div className=\"main\">\r\n          <SignIn />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nconst Footer = (props) => {\r\n\r\n\r\n  return (<div className=\"footer\">\r\n    <div className='footer_motto'>\r\n      Pora sie najebać!\r\n    </div>\r\n    <div className='footer_madeBy'>\r\n      <div className='footer_madeBy_madeByLogo'>\r\n        <img src={\"/logo-black-2.png\"} alt=\"logo\" width=\"45\" height=\"25\" />\r\n      </div>\r\n      <div className='footer_madeBy_madeByTeam'>\r\n        <p className='footer_madeBy_madeByTeam_made'>Made By: </p>\r\n        <p className='footer_madeBy_madeByTeam_by'>Monke Squad</p>\r\n\r\n      </div>\r\n    </div>\r\n\r\n  </div>);\r\n}\r\n\r\nexport default Footer;","const DesktopWarning = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"background\"></div>\r\n            <div className=\"main_pc\">\r\n                <img src={\"/logo-black-2.png\"} alt=\"logo\" width=\"85\" height=\"55\" />\r\n                <p> This App for now is specifically build for and only mobile phones!</p>\r\n                <p> On PC please use developer tools and device mode!</p>\r\n                <p> On Tablet use build in phone screen renderer!</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default DesktopWarning;","import { useMediaQuery } from \"react-responsive\";\r\n\r\nexport const Desktop = ({ children }) => {\r\n    const isDesktop = useMediaQuery({ minWidth: '710px' });\r\n    return isDesktop ? children : null;\r\n};\r\nexport const Mobile = ({ children }) => {\r\n    const isMobile = useMediaQuery({ maxWidth: 700 });\r\n    return isMobile ? children : null;\r\n};\r\n\r\n","import React, { useState, createContext, useEffect } from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport './App.scss';\r\nimport Header from './components/Header'\r\nimport Main from './components/Main'\r\nimport Footer from './components/Footer'\r\nimport DesktopWarning from './components/DesktopWarning'\r\nimport firebase from \"./firebase\";\r\nimport 'firebase/firestore';\r\nimport { Mobile, Desktop } from \"./components/deviceDetect\";\r\nimport useComponentVisible from \"./components/HandleClick\";\r\n\r\nexport const MenuContext = createContext()\r\n\r\nfunction App() {\r\n\r\n  const [displayed, setDisplayed] = useState(\"Tickets\")\r\n  const [tickets, setTickets] = useState([]);\r\n  const { windowref, isComponentVisible, setIsComponentVisible } =\r\n    useComponentVisible(false, null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const db = firebase.firestore();\r\n      const data = await db.collection(\"tickets\").get();\r\n      setTickets(data.docs.map(doc => ({ ...doc.data(), id: doc.id })));\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <Container disableGutters={true}>\r\n      <MenuContext.Provider value={{ displayed, setDisplayed, tickets, windowref, isComponentVisible, setIsComponentVisible }}>\r\n\r\n        <Mobile>\r\n          <Header></Header>\r\n          <Main />\r\n          <Footer></Footer>\r\n        </Mobile>\r\n\r\n        <Desktop>\r\n          <DesktopWarning />\r\n        </Desktop>\r\n\r\n      </MenuContext.Provider>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState, useEffect, useRef } from \"react\";\r\n\r\n// component ktory zrobilem do ogarniania kliku poza okno szczegolow \r\n// klienta ( tickets-detail) przyjmuje argumenty takie jak 1)ref ktore okno\r\n//  ma byc obserwowane do klikania i poza nie 2)isComponentVisible to Usestate \r\n//  przyjmujacy true albo false w zaleznosci od tego czy okno ma byc widoczne \r\n//  czy nie oraz przyjmuje obiekt konkretnego ticketu ktorym ma wypelnic okno\r\n//  oraz 3) setIsComponentVisible to wiadomo, ustawia arrey stanu \"[true/false , ticket]\"\r\n\r\nexport default function useComponentVisible(initialIsVisible, index) {\r\n    const [isComponentVisible, setIsComponentVisible] =\r\n        useState([initialIsVisible, index]);\r\n    const windowref = useRef(null);\r\n\r\n    const handleClickOutside = (event) => {\r\n        if (windowref.current && !windowref.current.contains(event.target)) {\r\n            setIsComponentVisible([false, null]);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"click\", handleClickOutside, true);\r\n        return () => {\r\n            document.removeEventListener(\"click\", handleClickOutside, true);\r\n        };\r\n    });\r\n\r\n    return { windowref, isComponentVisible, setIsComponentVisible };\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}