{"version":3,"sources":["projekt-neon-logo.svg","components/menu.jsx","components/Header.jsx","components/SignIn.jsx","firebase.js","components/Scanner.jsx","components/Item.jsx","components/timeConverter.jsx","components/AllTickets.jsx","components/SoldTickets.jsx","components/Logout.jsx","components/Main.jsx","components/Footer.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["NavigationMenu","setValue","useContext","MenuContext","React","useState","anchorEl","setAnchorEl","handleClick","btn","className","onClick","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","Header","props","src","logo","alt","width","height","SignIn","email","setEmail","password","setPassword","useSignInWithEmailAndPassword","firebase","auth","signInWithEmailAndPassword","loading","error","message","type","value","onChange","e","target","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","ticketsRef","firestore","collection","Scanner","delay","setDelay","result","setResult","showMore","setShowMore","Client","setClient","ticketUpdate","setTicketUpdate","updateTicket","ticketRef","a","update","isValid","validatedAt","Date","now","then","console","log","catch","handleDocumentFound","ticket","handleScan","scannedValue","timestamp","doc","get","exists","data","getTicket","addDocument","style","onError","err","onScan","clientName","Button","variant","color","endIcon","Icon","Item","name","status","code","index","validate","timeConverter","mili","year","getFullYear","month","getMonth","getDate","getHours","getMinutes","getSeconds","AllTickets","tickets","map","qrcode","SoldTickets","filter","Logout","signOut","Main","useAuthState","user","Footer","createContext","App","setTickets","useEffect","db","docs","fetchData","Container","disableGutters","Provider","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5b83d0b4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/projekt-neon-logo.61fd0f18.svg\";","import React from 'react';\r\nimport { MenuContext } from '../App';\r\nimport {useContext} from 'react'\r\nimport { Menu, MenuItem} from '@material-ui/core';\r\n\r\nconst NavigationMenu = () => {\r\n\r\n  const {setValue} = useContext(MenuContext);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClickListItem = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClick = (btn) => {\r\n    setValue(btn)\r\n    setAnchorEl(null);\r\n  }\r\n\r\n return(\r\n  <div className=\"NavMenu\">\r\n    <button className=\"NavMenuBtn\" onClick={handleClickListItem}>\r\n      <p className=\"hamburger\">|||</p>\r\n    </button>\r\n    <Menu\r\n      id=\"simple-menu\"\r\n      anchorEl={anchorEl}\r\n      keepMounted\r\n      open={Boolean(anchorEl)}\r\n      onClose={handleClose}\r\n    >\r\n      <MenuItem onClick={() => handleClick(\"Skaner\")}>Skaner</MenuItem>\r\n      <MenuItem onClick={() => handleClick(\"Skasowane\")}>Skasowane bilety</MenuItem>\r\n      <MenuItem onClick={() => handleClick(\"Wszystkie\")}>Wszystkie bilety</MenuItem>\r\n      <MenuItem onClick={() => handleClick(\"Logout\")}>Logout</MenuItem>\r\n    </Menu>\r\n  </div>\r\n )\r\n}\r\n\r\nexport default NavigationMenu;","import React from 'react';\r\nimport logo from '../projekt-neon-logo.svg';\r\nimport NavigationMenu from './menu'\r\nconst Header = (props) => {\r\n  return ( \r\n  <div className=\"header\">\r\n    <img src={logo} alt=\"\" width=\"100\" height=\"50\" />\r\n    <NavigationMenu/>\r\n  </div> );\r\n}\r\n \r\nexport default Header;","import { useSignInWithEmailAndPassword } from 'react-firebase-hooks/auth';\r\nimport React, {useState} from 'react'\r\nimport firebase from 'firebase'\r\n\r\nconst SignIn = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [\r\n    signInWithEmailAndPassword,\r\n    user,\r\n    loading,\r\n    error,\r\n  ] = useSignInWithEmailAndPassword(firebase.auth());\r\n\r\n  if (error) {\r\n    return (\r\n      <div>\r\n        <p>Error: {error.message}</p>\r\n            <input\r\n        type=\"email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <button onClick={() => signInWithEmailAndPassword(email, password)}>\r\n        Sign In\r\n      </button>\r\n      </div>\r\n    );\r\n  }\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n  if (user) {\r\n    <p>signed with:{user}</p>\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <input\r\n        type=\"email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <button onClick={() => signInWithEmailAndPassword(email, password)}>\r\n        Sign In\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn","import firebase from 'firebase/app';\r\n// import firebaseConfig from '../firebaseConfig';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDA2P7mrlQqsxniuob9LRJm1UmVEC5stj4\",\r\n  authDomain: \"t2p-qr-reader.firebaseapp.com\",\r\n  projectId: \"t2p-qr-reader\",\r\n  storageBucket: \"t2p-qr-reader.appspot.com\",\r\n  messagingSenderId: \"402343303548\",\r\n  appId: \"1:402343303548:web:59ce8958467737f6206cf9\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\nexport default firebase;\r\n","import React, { useState } from 'react';\r\nimport QrReader from 'react-qr-reader'\r\nimport Button from '@material-ui/core/Button';\r\nimport firebase from \"../firebase\";\r\nimport Icon from '@material-ui/core/Icon';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n\r\nconst db = firebase.firestore()\r\nconst ticketsRef = db.collection('tickets')\r\n\r\nfunction Scanner()  {\r\n  const [delay, setDelay] = useState(false)\r\n  const [result, setResult] = useState(null)\r\n  const [showMore, setShowMore] = useState(false)\r\n  const [Client, setClient] = useState(\"data\")\r\n  const [ticketUpdate, setTicketUpdate] = useState(\"Zeskanuj Kod by uzyskać więcej informacji\")\r\n\r\n  const showError = () => {\r\n    // TODO Tolek\r\n  }\r\n\r\n  const updateTicket = async (ticketRef) => {\r\n    return ticketRef.update({\r\n      isValid: false,\r\n      validatedAt: Date.now()\r\n    })\r\n    .then(() => {\r\n        console.log(\"Document successfully updated!\");\r\n        setTicketUpdate(\"Bilet pomyślnie skasowany\")\r\n    })\r\n    .catch((error) => {\r\n        // The document probably doesn't exist.\r\n        console.error(\"Error updating document: \", error);\r\n        setTicketUpdate(\"error: \" + error)\r\n    });\r\n  }\r\n\r\n  const handleDocumentFound = (ticket, ticketRef) => {\r\n    const {\r\n      isValid,\r\n    } = ticket\r\n\r\n    if(isValid) {\r\n      updateTicket(ticketRef)\r\n    } else {\r\n      showError('Bilet został juz skasowany')\r\n      setTicketUpdate(\"Bilet został juz skasowany\")\r\n    }\r\n      \r\n\r\n  }\r\n\r\n  const handleDocumentNotFound = (ticket, ticketRef) => {\r\n    showError('Bilet nie istnieje w systemie')\r\n    setClient(\"error\")\r\n    setTicketUpdate(\"Bilet nie istnieje w systemie\")\r\n  }\r\n\r\n\r\n  const handleScan = async (scannedValue) => {\r\n    \r\n    console.log('Scanned!: ', scannedValue)\r\n    if (scannedValue && delay) {\r\n      const timestamp = Date.now()\r\n      // call api with (timestamp and text)\r\n      console.log('timestamp', timestamp)\r\n      setResult(scannedValue)\r\n      setDelay(false)\r\n\r\n      const getTicket = async () => {\r\n        const ticketRef = await ticketsRef.doc(scannedValue)\r\n        ticketRef.get().then((doc) => {\r\n          if (doc.exists) {\r\n            console.log(\"Document data:\", doc.data());\r\n            setClient(doc.data());\r\n            handleDocumentFound(doc.data(), ticketRef)\r\n          } else {\r\n            // doc.data() will be undefined in this case\r\n            console.log(\"No such document!\");\r\n            handleDocumentNotFound(doc.data(), ticketRef)\r\n          }\r\n        }).catch((error) => {\r\n            console.error(\"Error getting document:\", error);\r\n        });\r\n\r\n      }\r\n      getTicket()\r\n\r\n      // TicketsDataService.getDoc(data)\r\n      // .then((resp) => {\r\n      //   console.log(\"resp!: \", resp);\r\n      // })\r\n      // .catch((e) => {\r\n      //   console.log(e);\r\n      // });\r\n\r\n    }\r\n\r\n  }\r\n\r\n  const handleError = (err) => {\r\n    console.error(err)\r\n  }\r\n\r\n  const moreDetail = () => {\r\n    setShowMore(!showMore)\r\n  }\r\n\r\n  const makeScan = () => {\r\n    setDelay(250)\r\n  }\r\n\r\n  const addDocument = async () => {}\r\n  \r\n\r\n    return(\r\n      <>\r\n      <div className=\"skaner\">\r\n        <QrReader\r\n          delay={delay}\r\n          style={{\r\n            width: '100%',\r\n          }}\r\n          onError={handleError}\r\n          onScan={handleScan}\r\n          />\r\n          </div>\r\n          <div className=\"resultConteiner\">\r\n             <div className=\"result\">\r\n               { showMore ? \r\n               <>\r\n                <div className=\"resultMore\">\r\n                 <p className=\"resultMoreText\"> KOD: {result}</p>\r\n                 <p className=\"resultMoreText\">Imie2: {Client.clientName} </p>\r\n                </div> \r\n               </>\r\n                :\r\n                <div className=\"resultMore\">\r\n                  <p> KOD: {result}</p>\r\n                </div>\r\n               }\r\n               <button className=\"showMore\" onClick={()=>moreDetail()}>\r\n               </button>\r\n             </div>\r\n             <div className=\"scanInfo\">\r\n                 l {ticketUpdate}\r\n               </div>\r\n             <div className=\"scanButtons\"> \r\n\r\n                <Button variant=\"contained\" color=\"default\" endIcon={<Icon>send</Icon>} onClick={()=>makeScan()}>\r\n                  Skanuj\r\n                </Button>\r\n                <div className=\"scanButtonsSpacer\"></div>\r\n                <Button variant=\"contained\" color=\"default\"  endIcon={<CloudUploadIcon />} onClick={()=>addDocument()}>\r\n                  Dodaj kod \r\n                </Button>\r\n             </div>\r\n          </div>\r\n      </>\r\n    )\r\n    \r\n  }\r\n  \r\nexport default Scanner","import React from 'react';\r\n\r\nconst Item = (props) => {\r\nconst {name,status,code,index,validate} = props;\r\n\r\n  return ( \r\n  <div className=\"ItemConteiner\">\r\n<div className=\"ItemCode\">{index}) kod: {code}</div>\r\n<div className=\"ItemInfo\">\r\n    <div>Name: {name}</div>\r\n    {status === false ?\r\n    <>\r\n    <div>Status: skasowany</div>\r\n    <div>czas: {validate}</div>\r\n    </>\r\n    :\r\n    <div>Status: Nieskasowany</div>}\r\n    </div>\r\n  </div> );\r\n}\r\n \r\nexport default Item;","export const timeConverter = (timestamp) => {  \r\n    const mili = new Date(timestamp);\r\n    const year = mili.getFullYear();\r\n    const month = mili.getMonth() < 10 ? '0' + (mili.getMonth() + 1) : (mili.getMonth() + 1);\r\n    const day = mili.getDate();\r\n    const hour = mili.getHours() < 10 ? '0' + mili.getHours() : mili.getHours();\r\n    const min = mili.getMinutes() < 10 ? '0' + mili.getMinutes() : mili.getMinutes();\r\n    const sec = mili.getSeconds() < 10? '0' + mili.getSeconds() : mili.getSeconds();\r\n    const time = day + '.' + month + '.' + year + ' ' + hour + ':' + min + ':' + sec ;\r\n    return time;\r\n  }\r\n\r\n","import React from 'react';\r\nimport Item from './Item'\r\nimport { MenuContext } from '../App';\r\nimport {useContext} from 'react'\r\nimport {timeConverter} from './timeConverter'\r\n\r\nconst AllTickets = (props) => {\r\n  const {tickets} = useContext(MenuContext);\r\n\r\n\r\n  return ( \r\n    <div className=\"AllTickets\">\r\n      Wszystkie Bilety:\r\n      {tickets.map((value,index) => (\r\n      <Item key={index} index={index} name={value.clientName} code={value.qrcode} status={value.isValid} validate={timeConverter(value.validatedAt)}  />\r\n      ))}\r\n      </div>\r\n  );\r\n}\r\n \r\nexport default AllTickets;","import React from 'react';\r\nimport Item from './Item'\r\nimport { MenuContext } from '../App';\r\nimport {useContext} from 'react'\r\nimport {timeConverter} from './timeConverter'\r\n\r\nconst SoldTickets = (props) => {\r\n  const {tickets} = useContext(MenuContext);\r\n\r\n   const isScaned = (value) => {\r\n    return !value.isValid;\r\n     }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"AllTickets\">\r\n    Skasowane Bilety:\r\n    {tickets.filter(isScaned).map((value,index) => (\r\n    <Item key={index} index={index} \r\n        name={value.clientName} \r\n        code={value.qrcode} \r\n        status={value.isValid} \r\n        validate={timeConverter(value.validatedAt)} \r\n        />\r\n        ))}\r\n    </div>\r\n  );\r\n\r\n}\r\n \r\nexport default SoldTickets;","import React from 'react';\r\nimport firebase from 'firebase'\r\nimport { MenuContext } from '../App';\r\nimport {useContext} from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nconst Logout = (props) => {\r\n\r\n    const {setValue} = useContext(MenuContext);\r\n    const logout = () => {\r\n        firebase.auth().signOut();\r\n        setValue(\"Skasowane\")\r\n      };\r\n\r\n  return ( \r\n  <div>\r\n      Czy na pewno chce się wylogować?\r\n      <div>\r\n\r\n      <Button variant=\"contained\" color=\"primary\" onClick={() => logout()}>\r\n            Tak\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={() => setValue(\"Skasowane\")}>\r\n           Nie\r\n      </Button>\r\n      </div>\r\n  </div> );\r\n}\r\n \r\nexport default Logout;","import React from 'react';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport firebase from 'firebase'\r\nimport { MenuContext } from '../App';\r\nimport {useContext} from 'react'\r\nimport SignIn from './SignIn'\r\nimport Scanner from './Scanner'\r\nimport AllTickets from './AllTickets'\r\nimport SoldTickets from './SoldTickets'\r\nimport Logout from './Logout'\r\n\r\n\r\n\r\nconst Main = (props) => {\r\n  const {value} = useContext(MenuContext);\r\n  const [user, loading, error] = useAuthState(firebase.auth());\r\n\r\n  if (user) {\r\n      switch (value){\r\n        case \"Skaner\":\r\n          return (\r\n            <div className=\"main_skaner\">\r\n            <Scanner />\r\n            </div>\r\n          );\r\n        case \"Skasowane\":\r\n          return (\r\n            <div className=\"main\">\r\n            <SoldTickets/>\r\n            </div>\r\n          );\r\n        case \"Wszystkie\":\r\n          return (\r\n            <div className=\"main\">\r\n            <AllTickets/>\r\n            </div>\r\n          );\r\n        case \"Logout\":\r\n          return (\r\n            <div className=\"main\">\r\n            <Logout/>\r\n            </div>\r\n          );\r\n        default:\r\n          return (\r\n            <div className=\"main\">\r\n              <p>problem with setting context.. </p>\r\n            </div>\r\n          );\r\n        }\r\n  }\r\n  else  if (loading) {\r\n    return (\r\n      <div className=\"main\">\r\n        <p>Initialising User...</p>\r\n      </div>\r\n    );\r\n  }\r\n  else  if (error) {\r\n    return (\r\n      <div className=\"main\">\r\n        <p>Error: {error}</p>\r\n      </div>\r\n    );\r\n  }\r\n  else { \r\n     return (\r\n      <div className=\"mainLogout\">\r\n      <SignIn/>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n \r\nexport default Main;","import React from 'react';\r\n\r\nconst Footer = (props) => {\r\n\r\n\r\n  return ( <div className=\"footer\">\r\n    <div className='motto'>\r\n      Czas sie najebać!\r\n      </div>\r\n      <div className='madeBy'>\r\n      <div className='madeByLogo'>T2P</div>\r\n      <div className='madeByTeam'>Made By: Monke Squad</div>\r\n      </div>\r\n\r\n  </div> );\r\n}\r\n \r\nexport default Footer;","import React, {useState,createContext} from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport './App.css';\r\nimport Header from './components/Header'\r\nimport Main from './components/Main'\r\nimport Footer from './components/Footer'\r\nimport firebase from \"./firebase\";\r\nimport 'firebase/firestore';\r\n\r\nexport const MenuContext = createContext()\r\n\r\nfunction App() {\r\n\r\n  const [value,setValue] = useState(\"Wszystkie\")\r\n  const [tickets, setTickets] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    const fetchData = async () => {\r\n      const db = firebase.firestore();\r\n      const data = await db.collection(\"tickets\").get();\r\n      setTickets(data.docs.map(doc => ({ ...doc.data(), id: doc.id })));\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n      <Container disableGutters={true}>\r\n        <MenuContext.Provider value={{value,setValue,tickets}}>\r\n          <Header></Header>\r\n          <Main/>\r\n          <Footer></Footer>\r\n        </MenuContext.Provider>\r\n      </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}